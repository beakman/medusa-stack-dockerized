services:
  medusa_server:
    build: .
    environment:
      MEDUSA_ADMIN_ONBOARDING_TYPE: default
      STORE_CORS: http://localhost:8000,https://docs.medusajs.com
      ADMIN_CORS: http://localhost:5173,http://localhost:9000,https://docs.medusajs.com
      AUTH_CORS: http://localhost:5173,http://localhost:9000,https://docs.medusajs.com
      REDIS_URL: redis://redis:6379
      JWT_SECRET: supersecret
      COOKIE_SECRET: supersecret
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa
      DISABLE_MEDUSA_ADMIN: false
      MEDUSA_WORKER_MODE: server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npx medusa db:migrate && npx medusa user -e admin@example.com -p supersecret && yarn start"
    ports:
      - 9000:9000

  medusa_worker:
    build: .
    environment:
      MEDUSA_ADMIN_ONBOARDING_TYPE: default
      STORE_CORS: http://localhost:8000,https://docs.medusajs.com
      ADMIN_CORS: http://localhost:5173,http://localhost:9000,https://docs.medusajs.com
      AUTH_CORS: http://localhost:5173,http://localhost:9000,https://docs.medusajs.com
      REDIS_URL: redis://redis:6379
      JWT_SECRET: supersecret
      COOKIE_SECRET: supersecret
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa
      DISABLE_MEDUSA_ADMIN: true
      MEDUSA_WORKER_MODE: worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npx medusa db:migrate && yarn start"
    ports:
      - 9000:9000

  postgres:
    image: postgres:17
    hostname: postgres
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa
    command: >
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
      -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 5432

  redis:
    image: redis:alpine
    hostname: redis
    container_name: redis
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
